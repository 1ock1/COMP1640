// <auto-generated />
using System;
using COMP1640.Utils;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COMP1640.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240310060055_AddReportCommentTable")]
    partial class AddReportCommentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("COMP1640.Models.Academic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Academics");
                });

            modelBuilder.Entity("COMP1640.Models.Falcuty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Falcuties");
                });

            modelBuilder.Entity("COMP1640.Models.FileReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileReports");
                });

            modelBuilder.Entity("COMP1640.Models.PublishedReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewedNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("PublishedReports");
                });

            modelBuilder.Entity("COMP1640.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastDateComment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("COMP1640.Models.ReportComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<int?>("PublishReportId")
                        .HasColumnType("int");

                    b.Property<int?>("PublishedReportId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponseForUserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublishedReportId");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("ReportComments");
                });

            modelBuilder.Entity("COMP1640.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademicId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntriesDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FalcutyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcademicId");

                    b.HasIndex("FalcutyId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("COMP1640.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FalcutyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FalcutyId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("COMP1640.Models.FileReport", b =>
                {
                    b.HasOne("COMP1640.Models.Report", "Report")
                        .WithMany("FileReports")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("COMP1640.Models.PublishedReport", b =>
                {
                    b.HasOne("COMP1640.Models.Report", "Report")
                        .WithMany("PublishedReports")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("COMP1640.Models.Report", b =>
                {
                    b.HasOne("COMP1640.Models.Topic", "Topic")
                        .WithMany("Reports")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP1640.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COMP1640.Models.ReportComment", b =>
                {
                    b.HasOne("COMP1640.Models.PublishedReport", "PublishedReport")
                        .WithMany("ReportComments")
                        .HasForeignKey("PublishedReportId");

                    b.HasOne("COMP1640.Models.Report", "Report")
                        .WithMany("ReportComments")
                        .HasForeignKey("ReportId");

                    b.HasOne("COMP1640.Models.User", "User")
                        .WithMany("ReportComments")
                        .HasForeignKey("UserId");

                    b.Navigation("PublishedReport");

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COMP1640.Models.Topic", b =>
                {
                    b.HasOne("COMP1640.Models.Academic", "Academic")
                        .WithMany("Topics")
                        .HasForeignKey("AcademicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP1640.Models.Falcuty", "Falcuty")
                        .WithMany("Topics")
                        .HasForeignKey("FalcutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academic");

                    b.Navigation("Falcuty");
                });

            modelBuilder.Entity("COMP1640.Models.User", b =>
                {
                    b.HasOne("COMP1640.Models.Falcuty", "Falcuty")
                        .WithMany("User")
                        .HasForeignKey("FalcutyId");

                    b.Navigation("Falcuty");
                });

            modelBuilder.Entity("COMP1640.Models.Academic", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("COMP1640.Models.Falcuty", b =>
                {
                    b.Navigation("Topics");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COMP1640.Models.PublishedReport", b =>
                {
                    b.Navigation("ReportComments");
                });

            modelBuilder.Entity("COMP1640.Models.Report", b =>
                {
                    b.Navigation("FileReports");

                    b.Navigation("PublishedReports");

                    b.Navigation("ReportComments");
                });

            modelBuilder.Entity("COMP1640.Models.Topic", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("COMP1640.Models.User", b =>
                {
                    b.Navigation("ReportComments");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
